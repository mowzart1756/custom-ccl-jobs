select	; core order entry fields alignment
	domain = concat( trim(curdomain) ,' (', format(sysdate,"yyyymmdd hhmm;3;q"), ")" )
	, prompt_ = dta.mnemonic
	, field_description = oe_fields.description
	, catalog_type = if (oe_fields.catalog_type_cd = 0) "None"
	else uar_get_code_display(oe_fields.catalog_type_cd)
	endif
	, field_type = evaluate(oe_fields.field_type_flag,
	0,"Alphanumeric",
	1,"Integer",
	2,"Decimial",
	3,"Date",
	5,"Date/Time",
	6,"Codeset",
	7,"Yes/No",
	8,"Physician/Provider",
	9,"Location",
	10,"ICD9",
	11,"Printer",
	12,"List",
	13,"Personnel",
	14,"Accession",
	15,"Surgical Duration")
	, meaning = oe_field_m.description
	, accept_size = if(oe_fields.accept_size = 999) 0
	else oe_fields.accept_size
	endif
	, help_context = oe_fields.help_context_id
	, spin_increment = oe_fields.spin_increment_cnt
	, hide_from_common_order_details_window = evaluate(oe_fields.common_flag,
	0,"",
	1,"x")
	, allow_multiple_occurances_of_field = evaluate(oe_fields.allow_multiple_ind,
	0,"",
	1,"x")
	, make_field_as_wide_as_window = if(oe_fields.accept_size = 999) "x"
	else ""
	endif
	, enable_interface_mapping = evaluate(oe_fields.fsi_map_to_obx_ind,
	0,"",
	1,"x")
	, event_code = uar_get_code_display(oe_fields.event_cd)
	, validation_type = evaluate(oe_fields.validation_type_flag,
	0,"None",
	1,"Codeset",
	2,"Request",
	3,"Numeric Range")
	, codeset = if(oe_fields.validation_type_flag = 1) cnvtstring(oe_fields.codeset)
	else ""
	endif
	, minimum_value = if(oe_fields.validation_type_flag = 3) cnvtstring(oe_fields.min_val)
	else ""
	endif
	, maximum_value =  if(oe_fields.validation_type_flag = 3) cnvtstring(oe_fields.max_val)
	else ""
	endif
	, other_OEFs_using_field = if(other_field_OEFs.count >"0") other_field_OEFs.count
	else "0"
	endif
	, path_OEFs_using_field = if(path_field_OEFs.count >"0") path_field_OEFs.count
	else "0"
	endif
	, meds_OEFs_using_field = if(meds_field_OEFs.count >"0") meds_field_OEFs.count
	else "0"
	endif
	, rad_OEFs_using_field = if(rad_field_OEFs.count >"0") rad_field_OEFs.count
	else "0"
	endif
	, order_details_using_field = if(field_o_ds.count > "0")  field_o_ds.count
	else "0"
	endif
	, oe_fields_last_update = format(oe_fields.updt_dt_tm, "dd/mm/yy hh:mm:ss")
	, oe_fields_last_updater = if(oe_fields.oe_field_id > 0 and p_oe_fields.name_full_formatted = null) cnvtstring(oe_fields.updt_id)
	else p_oe_fields.name_full_formatted
	endif
	, oe_fields.oe_field_id
	, field_code_value_cki = cv.cki
	, code_value_last_update = format(cv.updt_dt_tm, "dd/mm/yyyy hh:mm:ss")

	, contributor_source_inbound = uar_get_code_display(cva.contributor_source_cd)
	, alias_inbound = if (cva.contributor_source_cd > 0 and cva.alias = " ") "<sp>"
	else cva.alias
	endif
	, alias_in_type_meaning_inbound = cva.alias_type_meaning
	, alias_in_last_update = format(cva.updt_dt_tm, "dd/mm/yyyy hh:mm:ss")

	, contributor_source_outbound = uar_get_code_display(cvo.contributor_source_cd)
	, alias_outbound = if (cvo.contributor_source_cd > 0 and cvo.alias = " ") "<sp>"
	else cvo.alias
	endif
	, alias_out_type_meaning_outbound = cvo.alias_type_meaning
	, alias_out_last_update = format(cvo.updt_dt_tm, "dd/mm/yyyy hh:mm:ss")

	, field_rank = dense_rank() over (partition by 0
	order by
	cnvtupper(oe_fields.description)
	)

from
	order_entry_fields oe_fields
	, (left join prsnl p_oe_fields on p_oe_fields.person_id = oe_fields.updt_id)
	, (left join oe_field_meaning oe_field_m on oe_field_m.oe_field_meaning_id = oe_fields.oe_field_meaning_id)
	, (left join discrete_task_assay dta on dta.task_assay_cd = oe_fields.prompt_entity_id)
	, (left join (select oef_fields.oe_field_id, count = count (*)
	from oe_format_fields oef_fields
	where oef_fields.oe_format_id
	 in (select oe_format_id
	 from order_entry_format
	 where catalog_type_cd not in (2513, 2516, 2517, 0)	; code values for 'Laboratory', 'Pharmacy' and 'Radiology' from code set 6000. '0' prevents '0 row' on oc table from returning.
	 ) group by oef_fields.oe_field_id)  other_field_OEFs on other_field_OEFs.oe_field_id = oe_fields.oe_field_id
	)
	, (left join (select oef_fields.oe_field_id, count = count (*)
	from oe_format_fields oef_fields
	where oef_fields.oe_format_id
	 in (select oe_format_id
	 from order_entry_format
	 where catalog_type_cd = 2513	; code value for 'Laboratory' from code set 6000
	 ) group by oef_fields.oe_field_id)  path_field_OEFs on path_field_OEFs.oe_field_id = oe_fields.oe_field_id
	)
	, (left join (select oef_fields.oe_field_id, count = count (*)
	from oe_format_fields oef_fields
	where oef_fields.oe_format_id
	 in (select oe_format_id
	 from order_entry_format
	 where catalog_type_cd = 2516	; code value for 'Pharmacy' from code set 6000
	 ) group by oef_fields.oe_field_id)  meds_field_OEFs on meds_field_OEFs.oe_field_id = oe_fields.oe_field_id
	)
	, (left join (select oef_fields.oe_field_id, count = count (*)
	from oe_format_fields oef_fields
	where oef_fields.oe_format_id
	 in (select oe_format_id
	 from order_entry_format
	 where catalog_type_cd = 2517	; code value for 'Radiology' from code set 6000
	 ) group by oef_fields.oe_field_id)  rad_field_OEFs on rad_field_OEFs.oe_field_id = oe_fields.oe_field_id
	)
	, (left join (select o_d.oe_field_id, count = count(*) from order_detail o_d group by o_d.oe_field_id) field_o_ds on field_o_ds.oe_field_id = oe_fields.oe_field_id)
	, (left join code_value cv on cv.code_value = oe_fields.oe_field_id)

	, (left join code_value_alias cva on cva.code_value = cv.code_value)	; Code value alias tab in Corecodebuilder

	, (left join code_value_outbound cvo on cvo.code_value = cv.code_value)	; Code value outbound tab in Corecodebuilder


plan	oe_fields
where	oe_fields.oe_field_id > 0	; to remove '0' row
;where	oe_fields.oe_field_id = 1234567
join	p_oe_fields
join	oe_field_m
join	dta
;join	field_OEFs
join	other_field_OEFs
join	path_field_OEFs
join	meds_field_OEFs
join	rad_field_OEFs
join	field_o_ds
join	cv	; Code Set 16449, 'Order Entry Fields'
join	cva
join	cvo


order by
	cnvtupper(oe_fields.description)
	, oe_fields.oe_field_id
	, build(uar_get_code_display(cva.contributor_source_cd),cva.alias)
	, build(uar_get_code_display(cvo.contributor_source_cd),cvo.alias)
	, 0	; to ensure 'select distinct' works correctly

with	time = 600
select
	ENC_ID = enc.encntr_id
	, URNo = ea_URN.alias
	, Active_Status = uar_get_code_display(enc.active_status_cd)
	, AGE_AT_PRESENTATION = floor(datetimediff(enc.arrive_dt_tm, P.BIRTH_DT_TM, 9))
	, GENDER = uar_get_code_display(p.sex_cd)
	, POSTCODE = pcode.Postcode
	, CAMPUS = uar_get_code_display(enc.loc_facility_cd)
	, ARRIVAL_TIME = enc.arrive_dt_tm "@SHORTDATETIME"
	, REG_TIME = enc.reg_dt_tm "@SHORTDATETIME"
	, ARRIVAL_MODE = uar_get_code_display(enc.admit_mode_cd)
	, SYMPTOM = enc.reason_for_visit ;VISIT COMPLAINT from Triage powerform
	, DISCH_DISP = uar_get_code_display(enc.disch_disposition_cd)
	, TRIAGE_DATE_TIME = enc.triage_dt_tm  "@SHORTDATETIME"
	, Dr_TIME_SEEN = dr_seen.start_time "@SHORTDATETIME"
	, IP_BED_REQ = ip_bed_req.IP_req_time "@SHORTDATETIME"
	, IP_ADMIT = enc.inpatient_admit_dt_tm "@SHORTDATETIME"
	, ED_DEPART = if(enc.inpatient_admit_dt_tm != null) format(enc.inpatient_admit_dt_tm, "dd/mm/yyyy hh:mm:ss")
		else format(enc.depart_dt_tm, "dd/mm/yyyy hh:mm:ss")
	endif
	, triage_cat = triage_cat.result_val

from encounter enc
	/*	Need to get only those encounters with an ED arrival event within the required time period.
	Because of encounter merges, can't rely on enc.arrival_dt_tm because if the inpatient encounter
	becomes the major encounter, it will use the admit DT as the arrival DT which is incorrect*/
	, (inner join(
		select
			ti.encntr_id
			, tke.display_key
			, arrived_dt = min(tkge.complete_dt_tm)
		from tracking_item ti
		;only look at ARRIVE tracking events that are completed
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd in (10525 /*complete*/))
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 2724 /*Arrive Event*/

			;this looks at only those arrival events that were attributable to ED
			and tke.tracking_group_cd in (151886115 /*ED FH*/, 151974417 /*ED SH*/, 151886117 /*ED WTN*/)
			and tke.display_key = "ARRIVE")

		where ti.active_ind = 1

		;need to group by display key to make sure it's the min of that specific display key
		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","vc50","DQ8")

		) arrived on arrived.encntr_id = enc.encntr_id
;		and arrived.arrived_dt >= cnvtdatetime("01-aug-2023 00:00:00") and arrived.arrived_dt < cnvtdatetime("01-sep-23 00:00:00")
		and arrived.arrived_dt >= cnvtdatetime("01-jan-2024 00:00:00")
	)

	, (left join encntr_alias ea_URN on ea_URN.encntr_id = enc.encntr_id
		and ea_URN.encntr_alias_type_cd = 1079	; 'URN' from code set 319
		and ea_URN.active_ind = 1	; active URNs only
		and ea_URN.end_effective_dt_tm > sysdate	; effective URNs only
	)
	, (left join person p on p.person_id = enc.person_id)

	/*	get ONE postcode from the active addresses based on most recent
	begin effective DT TM and most recently updated DT TM*/
	, (left join(
		select
			person_id = ad.parent_entity_id
			, Postcode = ad.zipcode
			, row_no = row_number() over (partition by ad.parent_entity_id order by ad.beg_effective_dt_tm desc, ad.updt_dt_tm
			desc)
		from address ad
		where ad.address_type_cd = 756 /*home*/
			and ad.active_ind = 1
			and ad.end_effective_dt_tm > sysdate
			and ad.zipcode != null
			and ad.active_status_cd = 188 /*active*/
			and ad.parent_entity_name = "PERSON"
		) pcode on pcode.person_id = p.person_id and pcode.row_no = 1
	)

	/*	get the earliest DR SEEN tracking event start (onset) time where
	the event was either "started" or "completed" (excludes "requested")*/
	, (left join(
		select
			ti.encntr_id
			, tke.display_key
			, start_time = min(tkge.onset_dt_tm)
		from tracking_item ti
		;only look at DR SEEN tracking events that are started or completed
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd in (79850081 /*start*/, 10525 /*complete*/))
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 2729 /*Doctor See Event*/
			and tke.display_key = "DRSEEN")

		where ti.active_ind = 1

		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","VC50","DQ8")

		) dr_seen on dr_seen.encntr_id = enc.encntr_id
	)

	/*	get the earliest IP Bed Request tracking event start (onset) time where
	the event was either started or completed (excludes "requested")*/
	, (left join(
		select
			ti.encntr_id
			, tke.display_key
			, IP_req_time = min(tkge.requested_dt_tm)
		from tracking_item ti;, track_event tke, tracking_event te
		;only look at IP Bed Request tracking events that are started or completed
		, (inner join tracking_event tkge on tkge.tracking_id = ti.tracking_id
			and tkge.active_ind = 1
			and tkge.event_status_cd = 10527 /*request*/)	;, 79850081 /*start*/, 10525 /*complete*/))
		, (inner join track_event tke on tke.track_event_id = tkge.track_event_id
			and tke.active_ind = 1
			and tke.event_use_mean_cd = 119688380 /*Inpatient Bed Request Event*/
			and tke.display_key = "INPTBEDREQUEST")

		where ti.active_ind = 1

		group by ti.encntr_id, tke.display_key

		with SQLTYPE("F8","VC50","DQ8")

		) ip_bed_req on ip_bed_req.encntr_id = enc.encntr_id
	)

	/*	Get the triage category from clinical events table.  Could be possible that there are multiple 'active' rows
		hence need to do a row_number() over encounter ID and sorted most recent to earliest and only return 1st one*/
	, (left join(
		select
			ce.encntr_id
			, row_no = row_number() over (partition by ce.encntr_id order by ce.valid_from_dt_tm desc, ce.updt_dt_tm desc)
			, ce.result_val
;			, event_cnt = count(*)
		from clinical_event ce
		where ce.valid_until_dt_tm > sysdate
			and ce.event_cd = 3346954 ; tracking acuity (triage category)
;			and ce.result_val != NULL
;			and ce.encntr_id = 51525319

;		group by ce.encntr_id

		with SQLTYPE("f8", "i2", "VC50")
		) triage_cat on triage_cat.encntr_id = enc.encntr_id and triage_cat.row_no = 1
	)



;where enc.arrive_dt_tm >= cnvtdatetime("01-aug-2023 00:00:00") and enc.arrive_dt_tm < cnvtdatetime("01-sep-23 00:00:00")
	where enc.active_ind = 1
	and exists (select 1 from encntr_loc_hist elh where elh.encntr_id = enc.encntr_id
		and elh.admit_type_cd in (79848699 /*Emergency presentation*/));, 309203 /*Admission from ED*/))
;	;and enc.encntr_id = 53936242
;	and enc.encntr_id = 53751913

with	time = 60


